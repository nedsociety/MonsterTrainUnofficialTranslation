name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MonsterTrainAppId: '1102190'
  ModLoaderWorkshopId: '2187468759'
  ModWorkshopId: '2513567370'

jobs:
  download_basegame:
    runs-on: ubuntu-latest
    container: cm2network/steamcmd:latest

    env:
      SteamId: ${{ secrets.STEAMID }}
      SteamPw: ${{ secrets.STEAMPW }}
      STEAMCMDDIR: /home/steam/steamcmd
      
    steps:
      - name: Download the main game and the BepInEx dependencies
        run: >
          ./steamcmd.sh
          +login $SteamId $SteamPw
          +@sSteamCmdForcePlatformType windows
          +force_install_dir ./steamdir
          +workshop_download_item $MonsterTrainAppId $ModLoaderWorkshopId
          +force_install_dir "./steamdir/steamapps/common/Monster Train/"
          +app_update $MonsterTrainAppId
          +quit
        working-directory: ${{ env.STEAMCMDDIR }}
      
      - name: Cache the files (only DLLs are needed)
        uses: actions/upload-artifact@v2
        with:
          name: steamdir-cache
          path: ${{ env.STEAMCMDDIR }}/steamdir/**/*.dll

  build:
    needs: download_basegame
    
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore the binaries from Steam
        uses: actions/download-artifact@v2
        with:
          name: steamdir-cache

      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Write SteamAppsDir.props
        run: >
          Set-Content -Path SteamAppsDir.props
          -Value "<Project><PropertyGroup><SteamAppsDir>$pwd\steamapps</SteamAppsDir></PropertyGroup></Project>"

      - name: Setup 3rd party libs
        run: >
          msbuild MonsterTrainUnofficialTranslation.sln /t:Restore
          /p:RestorePackagesConfig=true /p:Configuration=Release
        working-directory: src

      - name: Build the solution
        run: msbuild MonsterTrainUnofficialTranslation.sln /t:Rebuild /p:Configuration=Release
        working-directory: src

      - name: Upload the result
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: package

  upload_workshop:
    needs: build
    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest
    
    steps:
      - name: Get built package
        uses: actions/download-artifact@v2
        with:
          name: build
          path: workshop_package
      
      - name: Upload to Steam Workshop
        uses: arma-actions/workshop-upload@v1
        with:
          appId: ${{ env.MonsterTrainAppId }}
          itemId: ${{ env.ModWorkshopId }}
          contentPath: 'workshop_package/content'
          changelog: ''
        env:
          STEAM_USERNAME: ${{ secrets.STEAMID }}
          STEAM_PASSWORD: ${{ secrets.STEAMPW }}
